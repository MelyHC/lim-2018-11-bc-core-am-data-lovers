{"version":3,"sources":["component/CardPokemon.js","view/Home.js","view/Pokemon.js","App.js","serviceWorker.js","index.js"],"names":["CardPokemon","_ref","name","img","updatePokemon","num","react_default","a","createElement","className","Link","to","concat","onClick","src","alt","Home","pokemons","filterOption","order","length","react","map","_ref2","id","component_CardPokemon","key","type","data-toggle","aria-haspopup","aria-expanded","arial-label","value","Pokemon","pokeActual","pokemon","filter","objPoke","parseFloat","strType","candy","hasOwnProperty","candyCount","weaknesses","strWeakness","evolutions","App","state","currentPokemon","option","kind","orderBy","allPokemons","evolutionsPokemon","evolution","arrActual","arrEvolution","obj","forEach","push","updateCurrentPokemon","_this","setState","e","_this$state","_this$state$option","preventDefault","sortedPokemon","sort","b","target","localeCompare","find","typePoke","i","splice","countFilterPoke","toString","includes","reverse","_this2","this","arrPokemons","Object","values","dataPokemon","poke","prevEvo","nextEvo","dataPoke","_this3","_this$state2","BrowserRouter","Switch","Route","path","exact","render","view_Home","view_Pokemon","Component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b39101f4.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CardPokemon = ({ name, img, updatePokemon, num }) => {\r\n  return (\r\n    <div className=\"col-6 col-sm-3 col-lg-2 text-center mb-2 mb-md-3 pr-2 pl-2 pr-md-3 pl-md-3\">\r\n      <Link to={`/${num}`} onClick={() => updatePokemon(num)} className=\"card text-dark\">\r\n        <img src={img} alt={name} className=\"img-fluid m-2\" />\r\n        <h5>{name}</h5>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardPokemon;","import React, { Fragment } from 'react';\r\nimport CardPokemon from '../component/CardPokemon';\r\n\r\nconst Home = ({ pokemons, updatePokemon, filterOption, order }) => {\r\n  const arrTypes = ['Grass', 'Poison', 'Fire', 'Normal', 'Water', 'Ghost', 'Ground', 'Bug', 'Electric', 'Steel', 'Fighting', 'Ice', 'Psychic', 'Rock', 'Flying',  'Fairy', 'Dragon']\r\n\r\n  if (pokemons.length) {\r\n    return (\r\n      <Fragment>\r\n        <header className=\"bg-primary text-white\">\r\n          <h1 className=\"mb-2 mb-md-3 pl-2\">Pokedex</h1>\r\n        </header>\r\n        <div className=\"row m-0 pt-6\">\r\n          {\r\n            pokemons.map(({ id, name, img, num }) =>\r\n              <CardPokemon key={id} name={name} img={img} updatePokemon={updatePokemon} num={num} />\r\n            )}\r\n        </div>\r\n        <div className=\"btn-group dropup\">\r\n          <button className=\"fas fa-filter fixed-bottom m-2 m-md-3 p-3 icon bg-primary text-white text-right rounded-circle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"></button>\r\n          <form className=\"dropdown-menu border-dark p-0\" onClick={filterOption}>\r\n            <button className=\"dropdown-item\" type=\"button\" name=\"name\" arial-label=\"Ordenar por nombre\">Nombre</button>\r\n            <button className=\"dropdown-item\" type=\"button\" name=\"num\" arial-label=\"Ordenar por número en la pokedex\">N° en la pokedex</button>\r\n            <button className=\"dropdown-item\" type=\"button\" name=\"order\" value={order} arial-label=\"Orden\"><i className=\"fas fa-exchange-alt arrow-orientation\"></i> {order}</button>\r\n            <hr className=\"dropdown-divider border-dark\" />\r\n            <span className=\"dropdown-item py-0\">Tipo:</span>\r\n            <div className=\"px-3 pb-2\">\r\n              {arrTypes.map(type => <button className={`btn badge badge-pill badge-${type} badge-size text-white mx-1 mb-1`} value={`${type}`} name=\"type\" key={type}>{type}</button>)}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </Fragment>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"bg-danger view-all d-flex justify-content-center align-items-center text-white\">\r\n        <span className=\"mr-2\">Cargando pokemons</span><i className=\"fas fa-spinner loading\"></i>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home;","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Pokemon = ({ pokemons, pokeActual, updatePokemon }) => {\r\n  const pokemon = pokemons.filter(objPoke => parseFloat(objPoke.num) === parseFloat(pokeActual))[0];\r\n\r\n  return (\r\n    <Fragment>\r\n      <Link to=\"/lim-2018-11-bc-core-am-data-lovers\" className=\"fas fa-angle-left arrow fixed-top text-primary m-2 ml-md-4 px-2 py-1\"></Link>\r\n      <h2 className=\"text-center mt-2\">{pokemon.name}</h2>\r\n      <section className=\"row m-0\">\r\n        <figure className=\"col-md-6 d-flex justify-content-center align-items-center\">\r\n          <img src={pokemon.img} alt={pokemon.name} className=\"img-fluid img-poke\" />\r\n        </figure>\r\n        <div className=\"col-md-6 text-center text-md-left\">\r\n          <article className=\"mb-2\">\r\n            <h5>Número en la pokedex:</h5>\r\n            <span className=\"text-size\"> # {pokemon.num}</span>\r\n          </article>\r\n          <article className=\"mb-2\">\r\n            <h5 className=\"mb-0\">Tipo:</h5>\r\n            {pokemon.type.map(strType => <span className={`badge badge-pill badge-${strType} text-white text-size mx-1 mt-1`} key={strType}>{strType}</span>)}\r\n          </article>\r\n          <article className=\"mb-2\">\r\n            <h5>Nombre de caramelos:</h5>\r\n            <span className=\"text-size\">{pokemon.candy}</span>\r\n          </article>\r\n          {\r\n            pokemon.hasOwnProperty('candyCount') ?\r\n              <article className=\"mb-2\">\r\n                <h5>Caramelos para evolucionar:</h5>\r\n                <span className=\"text-size\">{pokemon.candyCount}</span>\r\n              </article>\r\n              : null\r\n          }\r\n          <article className=\"mb-1\">\r\n            <h5 className=\"mb-0\">Debilidades:</h5>\r\n            {pokemon.weaknesses.map(strWeakness => <span className={`badge badge-pill badge-${strWeakness} text-white text-size mx-1 mt-1`} key={strWeakness}>{strWeakness} </span>)}\r\n          </article>\r\n        </div>\r\n      </section>\r\n      <hr className=\"w-75 bg-primary\" />\r\n      <section className=\"text-center\">\r\n        <h6>Evoluciones</h6>\r\n        <div className=\"row m-0\">\r\n          {\r\n            pokemon.evolutions.map(({ img, name, num }) =>\r\n              <div className=\"col p-2\" key={name}>\r\n                <Link to={`/${num}`} onClick={() => updatePokemon(num)} className=\"text-dark\">\r\n                  <img src={img} alt={name} />\r\n                  <h6>{name}</h6>\r\n                  <span># {num}</span>\r\n                </Link>\r\n              </div>\r\n            )\r\n          }\r\n        </div>\r\n      </section>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Pokemon;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport pokemon from './data/pokemon/pokemon.json';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Home from './view/Home';\r\nimport Pokemon from './view/Pokemon';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    pokemons: [],\r\n    currentPokemon: '',\r\n    option: {\r\n      order: 'ASC',\r\n      kind: [],\r\n      orderBy: 'num'\r\n    },\r\n    allPokemons: []\r\n  }\r\n\r\n  evolutionsPokemon = (evolution, arrActual, arrEvolution) =>\r\n    evolution.map(obj => {\r\n      arrActual.forEach(objPoke => {\r\n        if (obj.num === objPoke.num) {\r\n          obj.img = objPoke.img\r\n        }\r\n      });\r\n      return arrEvolution.push(obj);\r\n    });\r\n\r\n  updateCurrentPokemon = (name) => this.setState({ currentPokemon: name });\r\n\r\n  filterOption = (e) => {\r\n    const { pokemons, option: { order, kind, orderBy }, allPokemons } = this.state;\r\n    e.preventDefault();\r\n\r\n    let sortedPokemon = pokemons.sort((a, b) =>\r\n      e.target.name === 'name' ? a.name.localeCompare(b.name)\r\n        : e.target.name === 'num' ? parseFloat(a.num) - parseFloat(b.num)\r\n          : null\r\n    );\r\n\r\n    if (e.target.name === 'type') {\r\n\r\n      if (kind.find(typePoke => typePoke === e.target.value))\r\n        kind.map((typePoke, i) => typePoke === e.target.value ?\r\n          kind.splice(i, 1) : null);\r\n      else kind.splice(0, 1, e.target.value);\r\n\r\n      let countFilterPoke = [];\r\n\r\n      if (kind.length !== 0) {\r\n        countFilterPoke = allPokemons.filter(({ type }) => type.toString().includes(kind.toString()))\r\n      }\r\n      sortedPokemon = countFilterPoke.length !== 0 ? countFilterPoke : allPokemons;\r\n    }\r\n\r\n    if (e.target.name === 'order' || order === 'DESC') sortedPokemon.reverse();\r\n\r\n    this.setState({\r\n      pokemons: sortedPokemon,\r\n      option: {\r\n        orderBy: e.target.name === 'name' || e.target.name === 'num' ? e.target.name : orderBy,\r\n        order: e.target.name === 'order' ? e.target.value === 'DESC' ? 'ASC' : 'DESC' : order,\r\n        kind\r\n      }\r\n    })\r\n  }\r\n\r\n  componentWillMount() {\r\n    const arrPokemons = Object.values(pokemon.pokemon);\r\n    const dataPokemon = arrPokemons.map(poke => {\r\n      const evolutions = [];\r\n\r\n      if (poke.hasOwnProperty('prev_evolution')) {\r\n        const prevEvo = poke['prev_evolution'];\r\n        this.evolutionsPokemon(prevEvo, arrPokemons, evolutions);\r\n      };\r\n\r\n      if (poke.hasOwnProperty('next_evolution')) {\r\n        const nextEvo = poke['next_evolution'];\r\n        this.evolutionsPokemon(nextEvo, arrPokemons, evolutions);\r\n      };\r\n\r\n      const dataPoke = {\r\n        name: poke.name,\r\n        num: poke.num,\r\n        img: poke.img,\r\n        id: poke.id,\r\n        candy: poke.candy,\r\n        type: poke.type,\r\n        weaknesses: poke.weaknesses,\r\n        evolutions\r\n      };\r\n\r\n      evolutions.push(dataPoke);\r\n      evolutions.sort((a, b) => parseFloat(a.num) - parseFloat(b.num))\r\n\r\n      if (poke.hasOwnProperty('candy_count')) dataPoke.candyCount = poke['candy_count'];\r\n      return dataPoke;\r\n    })\r\n\r\n    this.setState({\r\n      pokemons: dataPokemon,\r\n      allPokemons: dataPokemon\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { pokemons, currentPokemon, option: { order } } = this.state;\r\n\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route\r\n            path='/lim-2018-11-bc-core-am-data-lovers'\r\n            exact\r\n            render={() => <Home pokemons={pokemons} updatePokemon={this.updateCurrentPokemon} filterOption={this.filterOption} order={order} />}\r\n          />\r\n          <Route\r\n            path={`/${currentPokemon}`}\r\n            exact\r\n            render={() => <Pokemon pokemons={pokemons} pokeActual={currentPokemon} updatePokemon={this.updateCurrentPokemon} />}\r\n          />\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}