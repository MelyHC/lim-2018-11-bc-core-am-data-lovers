{"version":3,"sources":["component/CardPokemon.js","view/Home.js","view/Pokemon.js","App.js","serviceWorker.js","index.js"],"names":["CardPokemon","_ref","name","img","updatePokemon","react_default","a","createElement","className","Link","to","concat","onClick","src","alt","Home","pokemons","filterOption","order","length","react","map","_ref2","id","component_CardPokemon","key","type","data-toggle","aria-haspopup","aria-expanded","arial-label","value","Pokemon","pokeActual","pokemon","filter","objPoke","num","strType","candy","hasOwnProperty","candyCount","weaknesses","strWeakness","evolutions","App","state","currentPokemon","option","kind","orderBy","allPokemons","evolutionsPokemon","evolution","arrActual","arrEvolution","obj","forEach","push","updateCurrentPokemon","_this","setState","e","_this$state","_this$state$option","preventDefault","sortedPokemon","sort","b","target","localeCompare","parseFloat","find","typePoke","i","splice","countFilterPoke","toString","includes","reverse","_this2","this","arrPokemons","Object","values","dataPokemon","poke","prevEvo","nextEvo","dataPoke","_this3","_this$state2","BrowserRouter","Switch","Route","path","exact","render","view_Home","view_Pokemon","Component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7f91a78f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CardPokemon = ({ name, img, updatePokemon }) => {\r\n  return (\r\n    <div className=\"col-6 col-sm-3 col-lg-2 text-center mb-2 mb-md-3 pr-2 pl-2 pr-md-3 pl-md-3\">\r\n      <Link to={`/${name}`} onClick={() => updatePokemon(name)} className=\"card text-dark\">\r\n        <img src={img} alt={name} className=\"img-fluid m-2\" />\r\n        <h5>{name}</h5>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardPokemon;","import React, { Fragment } from 'react';\r\nimport CardPokemon from '../component/CardPokemon';\r\n\r\nconst Home = ({ pokemons, updatePokemon, filterOption, order }) => {\r\n  const arrTypes = ['Grass', 'Poison', 'Fire', 'Flying', 'Water', 'Bug', 'Normal', 'Electric', 'Ground', 'Fighting', 'Psychic', 'Rock', 'Ice', 'Ghost', 'Dragon']\r\n\r\n  if (pokemons.length) {\r\n    return (\r\n      <Fragment>\r\n        <header className=\"bg-primary text-white\">\r\n          <h1 className=\"mb-2 mb-md-3 pl-2\">Pokedex</h1>\r\n        </header>\r\n        <div className=\"row m-0 pt-6\">\r\n          {\r\n            pokemons.map(({ id, name, img }) =>\r\n              <CardPokemon key={id} name={name} img={img} updatePokemon={updatePokemon} />\r\n            )}\r\n        </div>\r\n        <div className=\"btn-group dropup\">\r\n          <button className=\"fas fa-filter fixed-bottom m-2 m-md-3 p-3 icon bg-primary text-white text-right rounded-circle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"></button>\r\n          <form className=\"dropdown-menu\" onClick={filterOption}>\r\n            <button className=\"dropdown-item\" type=\"button\" name=\"name\" arial-label=\"Ordenar por nombre\">Nombre</button>\r\n            <button className=\"dropdown-item\" type=\"button\" name=\"num\" arial-label=\"Ordenar por número en la pokedex\">N° en la pokedex</button>\r\n            <button className=\"dropdown-item\" type=\"button\" name=\"order\" value={order} arial-label=\"Orden\"><i className=\"fas fa-exchange-alt arrow-orientation\"></i> {order}</button>\r\n            <hr className=\"dropdown-divider\" />\r\n            <span className=\"dropdown-item\">Tipo:</span>\r\n            <div className=\"px-3 py-1\">\r\n              {arrTypes.map(type => <button className={`btn badge badge-pill badge-${type} badge-size text-white mx-1`} value={`${type}`} name=\"type\" key={type}>{type}</button>)}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </Fragment>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"bg-danger view-all d-flex justify-content-center align-items-center text-white\">\r\n        <span className=\"mr-2\">Cargando pokemons</span><i className=\"fas fa-spinner loading\"></i>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home;","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Pokemon = ({ pokemons, pokeActual, updatePokemon }) => {\r\n  const pokemon = pokemons.filter(objPoke => objPoke.name === pokeActual)[0];\r\n\r\n  return (\r\n    <Fragment>\r\n      <Link to=\"/lim-2018-11-bc-core-am-data-lovers\" className=\"fas fa-angle-left arrow position-absolute text-primary m-2 ml-md-4 px-2 py-1\"></Link>\r\n      <h2 className=\"text-center\">{pokemon.name}</h2>\r\n      <section className=\"row m-0\">\r\n        <figure className=\"col-md-6 d-flex justify-content-center align-items-center\">\r\n          <img src={pokemon.img} alt={pokemon.name} className=\"img-fluid img-poke\" />\r\n        </figure>\r\n        <div className=\"col-md-6 text-center text-md-left\">\r\n          <article className=\"mb-2\">\r\n            <h5>Número en la pokedex:</h5>\r\n            <span className=\"text-size\"> # {pokemon.num}</span>\r\n          </article>\r\n          <article className=\"mb-2\">\r\n            <h5>Tipo:</h5>\r\n            {pokemon.type.map(strType => <span className={`badge badge-pill badge-${strType} text-white text-size mx-1`} key={strType}>{strType}</span>)}\r\n          </article>\r\n          <article className=\"mb-2\">\r\n            <h5>Nombre de caramelos:</h5>\r\n            <span className=\"text-size\">{pokemon.candy}</span>\r\n          </article>\r\n          {\r\n            pokemon.hasOwnProperty('candyCount') ?\r\n              <article className=\"mb-2\">\r\n                <h5>Caramelos para evolucionar:</h5>\r\n                <span className=\"text-size\">{pokemon.candyCount}</span>\r\n              </article>\r\n              : null\r\n          }\r\n          <article className=\"mb-1\">\r\n            <h5>Debilidades:</h5>\r\n            {pokemon.weaknesses.map(strWeakness => <span className={`badge badge-pill badge-${strWeakness} text-white text-size mx-1`} key={strWeakness}>{strWeakness} </span>)}\r\n          </article>\r\n        </div>\r\n      </section>\r\n      <hr className=\"w-75 bg-primary\" />\r\n      <section className=\"text-center\">\r\n        <h6>Evoluciones</h6>\r\n        <div className=\"row m-0\">\r\n          {\r\n            pokemon.evolutions.map(({ img, name, num }) =>\r\n              <div className=\"col\" key={name}>\r\n                <Link to={`/${name}`} onClick={() => updatePokemon(name)} className=\"text-dark\">\r\n                  <img src={img} alt={name} />\r\n                  <h6>{name}</h6>\r\n                  <span># {num}</span>\r\n                </Link>\r\n              </div>\r\n            )\r\n          }\r\n        </div>\r\n      </section>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Pokemon;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport pokemon from './data/pokemon/pokemon.json';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Home from './view/Home';\r\nimport Pokemon from './view/Pokemon';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    pokemons: [],\r\n    currentPokemon: '',\r\n    option: {\r\n      order: 'ASC',\r\n      kind: [],\r\n      orderBy: 'num'\r\n    },\r\n    allPokemons: []\r\n  }\r\n\r\n  evolutionsPokemon = (evolution, arrActual, arrEvolution) =>\r\n    evolution.map(obj => {\r\n      arrActual.forEach(objPoke => {\r\n        if (obj.num === objPoke.num) {\r\n          obj.img = objPoke.img\r\n        }\r\n      });\r\n      return arrEvolution.push(obj);\r\n    });\r\n\r\n  updateCurrentPokemon = (name) => this.setState({ currentPokemon: name });\r\n\r\n  filterOption = (e) => {\r\n    const { pokemons, option: { order, kind, orderBy }, allPokemons } = this.state;\r\n    e.preventDefault();\r\n\r\n    let sortedPokemon = pokemons.sort((a, b) =>\r\n      e.target.name === 'name' ? a.name.localeCompare(b.name)\r\n        : e.target.name === 'num' ? parseFloat(a.num) - parseFloat(b.num)\r\n          : null\r\n    );\r\n\r\n    if (e.target.name === 'type') {\r\n\r\n      if (kind.find(typePoke => typePoke === e.target.value))\r\n        kind.map((typePoke, i) => typePoke === e.target.value ?\r\n          kind.splice(i, 1) : null);\r\n      else kind.splice(0, 1, e.target.value);\r\n\r\n      let countFilterPoke = [];\r\n\r\n      if (kind.length !== 0) {\r\n        countFilterPoke = allPokemons.filter(({ type }) => type.toString().includes(kind.toString()))\r\n      }\r\n      sortedPokemon = countFilterPoke.length !== 0 ? countFilterPoke : allPokemons;\r\n    }\r\n\r\n    if (e.target.name === 'order' || order === 'DESC') sortedPokemon.reverse();\r\n\r\n    this.setState({\r\n      pokemons: sortedPokemon,\r\n      option: {\r\n        orderBy: e.target.name === 'name' || e.target.name === 'num' ? e.target.name : orderBy,\r\n        order: e.target.name === 'order' ? e.target.value === 'DESC' ? 'ASC' : 'DESC' : order,\r\n        kind\r\n      }\r\n    })\r\n  }\r\n\r\n  componentWillMount() {\r\n    const arrPokemons = Object.values(pokemon.pokemon);\r\n    const dataPokemon = arrPokemons.map(poke => {\r\n      const evolutions = [];\r\n\r\n      if (poke.hasOwnProperty('prev_evolution')) {\r\n        const prevEvo = poke['prev_evolution'];\r\n        this.evolutionsPokemon(prevEvo, arrPokemons, evolutions);\r\n      };\r\n\r\n      if (poke.hasOwnProperty('next_evolution')) {\r\n        const nextEvo = poke['next_evolution'];\r\n        this.evolutionsPokemon(nextEvo, arrPokemons, evolutions);\r\n      };\r\n\r\n      const dataPoke = {\r\n        name: poke.name,\r\n        num: poke.num,\r\n        img: poke.img,\r\n        id: poke.id,\r\n        candy: poke.candy,\r\n        type: poke.type,\r\n        weaknesses: poke.weaknesses,\r\n        evolutions\r\n      };\r\n\r\n      evolutions.push(dataPoke);\r\n      evolutions.sort((a, b) => parseFloat(a.num) - parseFloat(b.num))\r\n\r\n      if (poke.hasOwnProperty('candy_count')) dataPoke.candyCount = poke['candy_count'];\r\n      return dataPoke;\r\n    })\r\n\r\n    this.setState({\r\n      pokemons: dataPokemon,\r\n      allPokemons: dataPokemon\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { pokemons, currentPokemon, option: { order } } = this.state;\r\n\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route\r\n            path='/lim-2018-11-bc-core-am-data-lovers'\r\n            exact\r\n            render={() => <Home pokemons={pokemons} updatePokemon={this.updateCurrentPokemon} filterOption={this.filterOption} order={order} />}\r\n          />\r\n          <Route\r\n            path={`/${currentPokemon}`}\r\n            exact\r\n            render={() => <Pokemon pokemons={pokemons} pokeActual={currentPokemon} updatePokemon={this.updateCurrentPokemon} />}\r\n          />\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}