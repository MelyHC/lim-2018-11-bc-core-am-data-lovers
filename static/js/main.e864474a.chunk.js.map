{"version":3,"sources":["component/CardPokemon.js","view/Home.js","view/Pokemon.js","App.js","serviceWorker.js","index.js"],"names":["CardPokemon","_ref","name","img","updatePokemon","num","topPage","react_default","a","createElement","className","Link","to","concat","onClick","src","alt","Home","pokemons","filterOption","order","react","type","data-toggle","aria-haspopup","aria-expanded","arial-label","value","map","key","length","_ref2","id","component_CardPokemon","Pokemon","pokeActual","pokemon","filter","objPoke","parseFloat","strType","candy","hasOwnProperty","candyCount","weaknesses","strWeakness","evolutions","App","state","currentPokemon","option","kind","orderBy","allPokemons","evolutionsPokemon","evolution","arrActual","arrEvolution","obj","forEach","push","updateCurrentPokemon","_this","setState","viewTopPage","window","scroll","e","_this$state","_this$state$option","preventDefault","sortedPokemon","sort","b","target","localeCompare","find","typePoke","i","splice","countFilterPoke","toString","includes","reverse","_this2","this","numPokemon","props","location","pathname","split","arrPokemons","Object","values","dataPokemon","poke","prevEvo","nextEvo","dataPoke","_this3","_this$state2","BrowserRouter","basename","Switch","Route","path","exact","render","view_Home","view_Pokemon","Component","withRouter","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e864474a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CardPokemon = ({ name, img, updatePokemon, num, topPage }) => {\r\n  return (\r\n    <div className=\"col-6 col-sm-3 col-lg-2 text-center mb-2 mb-md-3 pr-2 pl-2 pr-md-3 pl-md-3\">\r\n      <Link to={`/${num}`} onClick={() => { updatePokemon(num); topPage(); }} className=\"card text-dark\">\r\n        <figure className=\"m-0\">\r\n          <img src={img} alt={name} className=\"img-fluid m-2\" />\r\n        </figure>\r\n        <h5>{name}</h5>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardPokemon;","import React, { Fragment } from 'react';\r\nimport CardPokemon from '../component/CardPokemon';\r\n\r\nconst Home = ({ pokemons, updatePokemon, filterOption, order, topPage }) => {\r\n  const arrTypes = ['Grass', 'Poison', 'Fire', 'Normal', 'Water', 'Ghost', 'Ground', 'Bug', 'Electric', 'Steel', 'Fighting', 'Ice', 'Psychic', 'Rock', 'Flying', 'Fairy', 'Dragon']\r\n\r\n  return (\r\n    <Fragment>\r\n      <header className=\"bg-primary text-white d-flex justify-content-between align-items-center fixed-top\">\r\n        <h1 className=\"pl-2\">Pokedex</h1>\r\n        <div className=\"dropdown\">\r\n          <button className=\"btn btn-primary mr-2 p-2 text-right rounded-circle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n            <i className=\"fas fa-filter icon\" />\r\n          </button>\r\n          <div className=\"dropdown-menu dropdown-menu-right border-dark p-0\" onClick={filterOption}>\r\n            <button className=\"dropdown-item\" type=\"button\" name=\"name\" arial-label=\"Ordenar por nombre\">Nombre</button>\r\n            <button className=\"dropdown-item\" type=\"button\" name=\"num\" arial-label=\"Ordenar por nÃºmero en la pokedex\">NÂ° en la pokedex</button>\r\n            <button className=\"dropdown-item\" type=\"button\" name=\"order\" value={order} arial-label=\"Orden\"><i className=\"fas fa-exchange-alt arrow-orientation\"></i> {order}</button>\r\n            <hr className=\"dropdown-divider border-dark\" />\r\n            <span className=\"dropdown-item py-0\">Tipo:</span>\r\n            <div className=\"px-3 pb-2\">\r\n              {arrTypes.map(type => <button className={`btn badge badge-pill badge-${type} badge-size text-white mx-1 mb-1`} value={`${type}`} name=\"type\" key={type}>{type}</button>)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <div className=\"row m-0 pt-5 mt-3 mt-md-4\">\r\n        {\r\n          pokemons.length ?\r\n            pokemons.map(({ id, name, img, num }) =>\r\n              <CardPokemon key={id} name={name} img={img} updatePokemon={updatePokemon} num={num} topPage={topPage} />\r\n            )\r\n            : <div className=\"text-md\">\r\n              <span className=\"mr-2\">Cargando pokemons</span><i className=\"fas fa-spinner fa-pulse\"></i>\r\n            </div>\r\n        }\r\n      </div>\r\n    </Fragment>\r\n  )\r\n\r\n}\r\n\r\nexport default Home;","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Pokemon = ({ pokemons, pokeActual, updatePokemon, topPage }) => {\r\n  const pokemon = pokemons.filter(objPoke => parseFloat(objPoke.num) === parseFloat(pokeActual))[0];\r\n\r\n  return (\r\n    <Fragment>\r\n      <Link to=\"/\" className=\"fas fa-angle-left arrow fixed-top text-primary m-2 ml-md-4 px-2 py-1\"></Link>\r\n      <h2 className=\"text-center mt-2\">{pokemon.name}</h2>\r\n      <section className=\"row m-0\">\r\n        <figure className=\"col-md-6 d-flex justify-content-center align-items-center\">\r\n          <img src={pokemon.img} alt={pokemon.name} className=\"img-fluid img-poke\" />\r\n        </figure>\r\n        <div className=\"col-md-6 text-center text-md-left\">\r\n          <article className=\"mb-2\">\r\n            <h5>NÃºmero en la pokedex:</h5>\r\n            <span className=\"text-size\"> # {pokemon.num}</span>\r\n          </article>\r\n          <article className=\"mb-2\">\r\n            <h5 className=\"mb-0\">Tipo:</h5>\r\n            {pokemon.type.map(strType => <span className={`badge badge-pill badge-${strType} text-white text-size mx-1 mt-1`} key={strType}>{strType}</span>)}\r\n          </article>\r\n          <article className=\"mb-2\">\r\n            <h5>Nombre de caramelos:</h5>\r\n            <span className=\"text-size\">{pokemon.candy}</span>\r\n          </article>\r\n          {\r\n            pokemon.hasOwnProperty('candyCount') ?\r\n              <article className=\"mb-2\">\r\n                <h5>Caramelos para evolucionar:</h5>\r\n                <span className=\"text-size\">{pokemon.candyCount}</span>\r\n              </article>\r\n              : null\r\n          }\r\n          <article className=\"mb-1\">\r\n            <h5 className=\"mb-0\">Debilidades:</h5>\r\n            {pokemon.weaknesses.map(strWeakness => <span className={`badge badge-pill badge-${strWeakness} text-white text-size mx-1 mt-1`} key={strWeakness}>{strWeakness} </span>)}\r\n          </article>\r\n        </div>\r\n      </section>\r\n      <hr className=\"w-75 bg-primary\" />\r\n      <section className=\"text-center\">\r\n        <h6>Evoluciones</h6>\r\n        <div className=\"row m-0\">\r\n          {\r\n            pokemon.evolutions.map(({ img, name, num }) =>\r\n              <div className=\"col p-2\" key={name}>\r\n                <Link to={`/${num}`} onClick={() => { updatePokemon(num); topPage(); }} className=\"text-dark\">\r\n                  <img src={img} alt={name} />\r\n                  <h6>{name}</h6>\r\n                  <span># {num}</span>\r\n                </Link>\r\n              </div>\r\n            )\r\n          }\r\n        </div>\r\n      </section>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Pokemon;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport pokemon from './data/pokemon/pokemon.json';\r\nimport { BrowserRouter as Router, Route, Switch, withRouter } from 'react-router-dom';\r\nimport Home from './view/Home';\r\nimport Pokemon from './view/Pokemon';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    pokemons: [],\r\n    currentPokemon: '',\r\n    option: {\r\n      order: 'ASC',\r\n      kind: [],\r\n      orderBy: 'num'\r\n    },\r\n    allPokemons: []\r\n  }\r\n\r\n  evolutionsPokemon = (evolution, arrActual, arrEvolution) =>\r\n    evolution.map(obj => {\r\n      arrActual.forEach(objPoke => {\r\n        if (obj.num === objPoke.num) {\r\n          obj.img = objPoke.img\r\n        }\r\n      });\r\n      return arrEvolution.push(obj);\r\n    });\r\n\r\n  updateCurrentPokemon = (name) => this.setState({ currentPokemon: name });\r\n\r\n  viewTopPage = () => window.scroll(0, 0);\r\n\r\n  filterOption = (e) => {\r\n    const { pokemons, option: { order, kind, orderBy }, allPokemons } = this.state;\r\n    e.preventDefault();\r\n\r\n    let sortedPokemon = pokemons.sort((a, b) =>\r\n      e.target.name === 'name' ? a.name.localeCompare(b.name)\r\n        : e.target.name === 'num' ? parseFloat(a.num) - parseFloat(b.num)\r\n          : null\r\n    );\r\n\r\n    if (e.target.name === 'type') {\r\n\r\n      if (kind.find(typePoke => typePoke === e.target.value))\r\n        kind.map((typePoke, i) => typePoke === e.target.value ?\r\n          kind.splice(i, 1) : null);\r\n      else kind.splice(0, 1, e.target.value);\r\n\r\n      let countFilterPoke = [];\r\n\r\n      if (kind.length !== 0) {\r\n        countFilterPoke = allPokemons.filter(({ type }) => type.toString().includes(kind.toString()))\r\n      }\r\n      sortedPokemon = countFilterPoke.length !== 0 ? countFilterPoke : allPokemons;\r\n    }\r\n\r\n    if (e.target.name === 'order' || order === 'DESC') sortedPokemon.reverse();\r\n\r\n    this.setState({\r\n      pokemons: sortedPokemon,\r\n      option: {\r\n        orderBy: e.target.name === 'name' || e.target.name === 'num' ? e.target.name : orderBy,\r\n        order: e.target.name === 'order' ? e.target.value === 'DESC' ? 'ASC' : 'DESC' : order,\r\n        kind\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    const pathName = this.props.location.pathname;\r\n    const numPokemon = pathName.split('/')[2];\r\n    if (numPokemon) this.updateCurrentPokemon(numPokemon);\r\n\r\n    const arrPokemons = Object.values(pokemon.pokemon);\r\n    const dataPokemon = arrPokemons.map(poke => {\r\n      const evolutions = [];\r\n\r\n      if (poke.hasOwnProperty('prev_evolution')) {\r\n        const prevEvo = poke['prev_evolution'];\r\n        this.evolutionsPokemon(prevEvo, arrPokemons, evolutions);\r\n      };\r\n\r\n      if (poke.hasOwnProperty('next_evolution')) {\r\n        const nextEvo = poke['next_evolution'];\r\n        this.evolutionsPokemon(nextEvo, arrPokemons, evolutions);\r\n      };\r\n\r\n      const dataPoke = {\r\n        name: poke.name,\r\n        num: poke.num,\r\n        img: poke.img,\r\n        id: poke.id,\r\n        candy: poke.candy,\r\n        type: poke.type,\r\n        weaknesses: poke.weaknesses,\r\n        evolutions\r\n      };\r\n\r\n      evolutions.push(dataPoke);\r\n      evolutions.sort((a, b) => parseFloat(a.num) - parseFloat(b.num))\r\n\r\n      if (poke.hasOwnProperty('candy_count')) dataPoke.candyCount = poke['candy_count'];\r\n      return dataPoke;\r\n    })\r\n\r\n    this.setState({\r\n      pokemons: dataPokemon,\r\n      allPokemons: dataPokemon\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { pokemons, currentPokemon, option: { order }, allPokemons } = this.state;\r\n\r\n    return (\r\n      <Router basename='lim-2018-11-bc-core-am-data-lovers'>\r\n        <Switch>\r\n          <Route\r\n            path='/'\r\n            exact\r\n            render={() => <Home pokemons={pokemons} updatePokemon={this.updateCurrentPokemon} filterOption={this.filterOption} order={order} topPage={this.viewTopPage} />}\r\n          />\r\n          <Route\r\n            path={`/${currentPokemon}`}\r\n            exact\r\n            render={() => <Pokemon pokemons={allPokemons} pokeActual={currentPokemon} updatePokemon={this.updateCurrentPokemon} topPage={this.viewTopPage} />}\r\n          />\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter >\r\n    <App />\r\n  </BrowserRouter>\r\n  , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}